import * as React from 'react';
// @ts-ignore
import { MDCTextFieldIconFoundation } from '@material/textfield/dist/mdc.textfield';
export interface IconProps extends React.HTMLProps<HTMLOrSVGElement> {
    disabled?: boolean;
    children: React.ReactElement<React.HTMLProps<HTMLOrSVGElement>>;
    onSelect?: () => void;
}
interface IconState {
    tabindex?: number;
    role?: string;
}
export default class Icon extends React.Component<IconProps, IconState> {
    foundation_: MDCTextFieldIconFoundation;
    static defaultProps: Partial<IconProps>;
    constructor(props: IconProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: IconProps): void;
    componentWillUnmount(): void;
    readonly tabindex: any;
    readonly adapter: {
        getAttr: (attr: "role" | "tabindex") => string;
        setAttr: (attr: "role" | "tabindex", value: React.ReactText) => void;
        removeAttr: (attr: "role" | "tabindex") => void;
        notifyIconAction: () => void | null;
    };
    handleClick: (e: React.MouseEvent<HTMLElement>) => any;
    handleKeyDown: (e: React.KeyboardEvent<HTMLElement>) => any;
    addIconAttrsToChildren: () => React.ReactElement<any>;
    render(): React.ReactElement<any>;
}
export {};
