import * as React from 'react';
// @ts-ignore
import { MDCTextFieldHelperTextFoundation } from '@material/textfield/dist/mdc.textfield';
export interface HelperTextProps {
    'aria-hidden': boolean;
    children: React.ReactNode;
    className: string;
    isValid: boolean;
    isValidationMessage: boolean;
    persistent: boolean;
    role?: string;
    showToScreenReader: boolean;
    validation: boolean;
}
interface HelperTextState {
    'aria-hidden': boolean;
    role?: string;
    classList: Set<string>;
}
export default class HelperText extends React.Component<HelperTextProps, HelperTextState> {
    foundation_: MDCTextFieldHelperTextFoundation;
    static defaultProps: {
        'aria-hidden': boolean;
        'className': string;
        'isValid': boolean;
        'isValidationMessage': boolean;
        'persistent': boolean;
        'showToScreenReader': boolean;
        'validation': boolean;
    };
    constructor(props: HelperTextProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: HelperTextProps): void;
    componentWillUnmount(): void;
    readonly classes: string;
    readonly adapter: {
        addClass: (className: string) => void;
        removeClass: (className: string) => void;
        hasClass: (className: string) => boolean;
        setAttr: (attr: "classList" | "role" | "aria-hidden", value: string) => void;
        removeAttr: (attr: "classList" | "role" | "aria-hidden") => void;
    };
    render(): JSX.Element;
}
export {};
